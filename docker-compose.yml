services:
  db:
    image: postgres:16
    env_file: .env.db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    ports: ["6379:6379"]

  backend:
    build: ./backend
    env_file: .env.backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py migrate --noinput &&
        gunicorn proj.wsgi:application -b 0.0.0.0:8000
      "

  bot:
    build: ./bot
    env_file: .env.bot
    depends_on: [backend]
    ports: ["8080:8080"]
